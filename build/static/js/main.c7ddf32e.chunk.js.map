{"version":3,"sources":["contexts/GlobalContext.jsx","routers/AccountsRouter.jsx","routers/ContentsRouter.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["GlobalContext","React","createContext","GlobalContextProvider","children","Provider","value","AccountsRouter","props","LoginView","lazy","fallback","path","component","exact","to","ContentsRouter","RoutercontentView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+MAGMA,EAAgBC,IAAMC,cAAc,IAY3BC,EAVe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAE5B,OACI,cAACJ,EAAcK,SAAf,CAAwBC,MAFd,GAEV,SACKF,KCQIG,EAdO,SAACC,GACvB,IAAMC,EAAYC,gBAAK,kBAAM,sDAC3B,OACE,cAAC,IAAD,UACI,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,kBAAkBC,UAAWJ,IACzC,cAAC,IAAD,CAAOK,OAAK,EAACF,KAAK,YAAYC,UAAW,WAAO,OAAS,cAAC,IAAD,CAAUE,GAAI,+BCOtEC,EAdO,SAACR,GACrB,OACE,cAAC,IAAD,UACI,cAAC,WAAD,CAAUG,SAAU,KAApB,SACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,kBAAkBC,UAAW,WAAQ,OAAS,yCAAG,uCAAH,UAC1D,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,UAAW,WAAQ,OAAS,yCAAG,sCAAH,UACzD,cAAC,IAAD,CAAOD,KAAK,YAAYC,UAAW,WAAO,OAAS,cAAC,IAAD,CAAUE,GAAI,+BCJ3EE,EAAoB,WACtB,OACI,mCACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAUN,SAAU,KAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOG,OAAK,EAACF,KAAK,aAAaC,UAAWN,IAC1C,cAAC,IAAD,CAAOO,OAAK,EAACF,KAAK,aAAaC,UAAWG,IAC1C,cAAC,IAAD,CAAOF,OAAK,EAACF,KAAK,IAAIC,UAAW,WAC7B,OACI,cAAC,IAAD,CAAUE,GAAG,iBAGrB,cAAC,IAAD,CAAOH,KAAK,IAAIC,UAAW,WAAQ,OAAS,yCAAG,+CAAH,oBAgBrDK,MARf,WACI,OACI,cAAC,EAAD,UACI,cAAC,EAAD,OClBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEH,cAAC,EAAD,IAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7ddf32e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport _ from 'lodash';\r\n\r\nconst GlobalContext = React.createContext({})\r\n\r\nconst GlobalContextProvider = ({children}) => {\r\n    const value = {}\r\n    return (\r\n        <GlobalContext.Provider value={value}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => React.useContext(GlobalContext)\r\nexport default GlobalContextProvider","import { lazy, Suspense } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nconst AccountsRouter =  (props) => {\n  const LoginView = lazy(() => import('views/Account/Login'));\n    return (\n      <Router>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n                <Route path=\"/accounts/login\" component={LoginView}/>\n                <Route exact path=\"/accounts\" component={()=> { return ( <Redirect to =\"/accounts/login\" />) }} />\n            </Switch>\n          </Suspense>\n      </Router>\n    )\n  }\n  \n  export default AccountsRouter\n  ","import { lazy, Suspense } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\nconst ContentsRouter =  (props) => {\n    return (\n      <Router>\n          <Suspense fallback={null}>\n            <Switch>\n                <Route path=\"/contents/intro\" component={() => { return ( <> <h1>intro</h1> </>)}}/>\n                <Route path=\"/contents/post\" component={() => { return ( <> <h1>post</h1> </>)}} />\n                <Route path=\"/contents\" component={()=> { return ( <Redirect to =\"/contents/intro\" />) }} />\n            </Switch>\n          </Suspense>\n      </Router>\n    )\n  }\n  \n  export default ContentsRouter\n  ","import { lazy, Suspense , useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport GlobalContextProvider, { useGlobalContext } from 'contexts/GlobalContext';\nimport AccountsRouter from 'routers/AccountsRouter';\nimport ContentsRouter from 'routers/ContentsRouter';\n\nconst RoutercontentView = () => {\n    return (\n        <>\n            <Router>\n                <Suspense fallback={null}>\n                    <Switch>\n                        <Route exact path=\"/accounts*\" component={AccountsRouter}/>\n                        <Route exact path=\"/contents*\" component={ContentsRouter}/>\n                        <Route exact path=\"/\" component={() => {\n                            return (\n                                <Redirect to=\"/accounts\" />\n                            )\n                        }}/>\n                        <Route path=\"*\" component={() => { return ( <> <h1>404 not found</h1> </>)}}/>\n                    </Switch>\n                </Suspense>\n            </Router>  \n        </>\n    )\n}\n\nfunction App() {\n    return (\n        <GlobalContextProvider>\n            <RoutercontentView/>\n        </GlobalContextProvider>    \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n      <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}