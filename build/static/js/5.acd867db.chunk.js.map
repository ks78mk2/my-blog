{"version":3,"sources":["contexts/PageContext.jsx","components/navigation.jsx","views/Main/Intro/index.jsx","views/Main/Post/index.jsx","views/Main/index.jsx","libs/axios.js","services/login.ts"],"names":["PageContext","React","createContext","usePageContext","useContext","PageContextProvider","children","useState","value","page","movePage","Provider","NavBar","props","userInfo","useGlobalContext","logout","a","LoginService","guestLogout","id","result","error","console","log","window","location","href","localStorage","removeItem","className","onClick","style","position","bottom","marginBottom","IntroView","PostView","ContentView","Intro","Post","Wrapper","MainView","axios","defaults","withCredentials","HTTP_METHOD","request","method","path","data","axiosRequest","statusCode","refresh","methods","refresh_N_reReq","undefined","config","url","process","timeout","_method","String","toUpperCase","indexOf","headers","Date","now","qs","stringify","getConfig","promise","Promise","resolve","reject","then","response","catch","params"],"mappings":"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","file":"static/js/5.acd867db.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport _ from 'lodash';\r\n\r\nconst PageContext = React.createContext({})\r\n\r\nconst PageContextProvider = ({children}) => {\r\n    const [page, movePage] = useState(\"Intro\");\r\n    const value = {\r\n        page, movePage\r\n    }\r\n    return (\r\n        <PageContext.Provider value={value}>\r\n            {children}\r\n        </PageContext.Provider>\r\n    )\r\n}\r\n\r\nexport const usePageContext = () => React.useContext(PageContext)\r\nexport default PageContextProvider","import \"assets/css/sb-admin-2.min.css\"\r\nimport \"assets/vendor/fontawesome-free/css/all.min.css\"\r\nimport {usePageContext} from \"contexts/PageContext\"\r\nimport {useGlobalContext} from \"contexts/GlobalContext\"\r\nimport LoginService from 'services/login'\r\n\r\nconst NavBar = props => {\r\n    const { userInfo } = useGlobalContext();\r\n    const { movePage } = usePageContext();\r\n    \r\n    const logout = async () => {\r\n        const {result , error} = await LoginService.guestLogout({id: userInfo.id});\r\n        if (error) {\r\n            console.log(error)\r\n            window.location.href = \"/accounts\" \r\n        } else  {\r\n            localStorage.removeItem('userInfo');\r\n            window.location.href = \"/accounts\" \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n\r\n                {/* <!-- Sidebar - Brand --> */}\r\n                <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"/contents\">\r\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                        <i className=\"fas fa-laugh-wink\"></i>\r\n                    </div>\r\n                    <div className=\"sidebar-brand-text mx-3\">Jskim's Blog</div>\r\n                </a>\r\n\r\n                {/* <!-- Divider --> */}\r\n                <hr className=\"sidebar-divider my-0\"/>\r\n\r\n                {/* <!-- Nav Item - Dashboard --> */}\r\n                <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\" onClick={()=> { movePage(\"intro\"); }}>\r\n                        <i className=\"far fa-id-card\"></i>\r\n                        <span>Introduce</span>\r\n                    </a>\r\n                </li>\r\n\r\n                {/* <!-- Divider --> */}\r\n                <hr className=\"sidebar-divider\"/>\r\n\r\n                {/* <!-- Heading --> */}\r\n                <div className=\"sidebar-heading\">\r\n                    Blog\r\n                </div>\r\n\r\n                {/* <!-- Nav Item - Pages Collapse Menu --> */}\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" onClick={()=> { movePage(\"post\"); }}>\r\n                        <i className=\"fas fa-fw fa-list\"></i>\r\n                        <span>게시글</span>\r\n                    </a>\r\n                </li>\r\n\r\n                {/* <!-- Nav Item - Free Board  --> */}\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" onClick={()=> { movePage(\"open-board\"); }}>\r\n                        <i className=\"fas fa-fw fa-keyboard\"></i>\r\n                        <span>자유게시판</span>\r\n                    </a>\r\n                </li>\r\n\r\n                {/* <!-- Divider --> */}\r\n                <hr className=\"sidebar-divider\"/>\r\n\r\n                {/* <!-- Heading --> */}\r\n                <div className=\"sidebar-heading\">\r\n                    ACCOUNT\r\n                </div>\r\n\r\n                { userInfo.id == \"guest\" &&\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" onClick={()=> { window.location.href = \"/accounts\" }}>\r\n                            <i className=\"fas fa-fw fa-sign-in-alt\"></i>\r\n                            <span>Login</span>\r\n                        </a>\r\n                    </li>\r\n                }\r\n\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" onClick={()=> { movePage(\"register\"); }}>\r\n                        <i className=\"fas fa-fw fa-user-plus\"></i>\r\n                        <span>회원가입</span>\r\n                    </a>\r\n                </li>\r\n\r\n                \r\n                {/* { userInfo.id != \"guest\" && */}\r\n                    <li className=\"nav-item\" style={{position: \"absolute\", bottom: \"0\"}}>\r\n                        <hr className=\"sidebar-divider\" style={{marginBottom : \"0px\"}}/>\r\n                        <a className=\"nav-link\" onClick={logout}>\r\n                            <i className=\"fas fa-fw fa-power-off\"></i>\r\n                            <span>Logout</span>\r\n                        </a>\r\n                    </li>\r\n                {/* } */}\r\n                \r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar","import 'assets/css/login.css'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nconst IntroView = props => {\r\n\r\n    return (\r\n        <>\r\n            <div>Intro!!</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IntroView\r\n","import 'assets/css/login.css'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nconst PostView = props => {\r\n\r\n    return (\r\n        <>\r\n            <div>Post!!</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostView\r\n","import NavBar from \"components/navigation\"\r\nimport PageContextProvider, {usePageContext} from \"contexts/PageContext\";\r\nimport IntroView from \"views/Main/Intro\"\r\nimport PostView from \"views/Main/Post\"\r\nimport React, { useEffect } from 'react'\r\nimport \"assets/css/sb-admin-2.min.css\"\r\nimport \"assets/css/google.font.css\"\r\nimport {useGlobalContext} from \"contexts/GlobalContext\";\r\n\r\nconst ContentView = () => {\r\n    const { page } = usePageContext();\r\n\r\n    switch (page) {\r\n        default:\r\n        case 'intro':\r\n            return <IntroView />\r\n        case 'post':\r\n            return <PostView />            \r\n    }\r\n}\r\n\r\nconst Wrapper = () => {\r\n    return (\r\n        <div id =\"wrapper\">\r\n            <NavBar />\r\n            <ContentView />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MainView = props => {\r\n    return (\r\n        <PageContextProvider>\r\n            <Wrapper />\r\n        </PageContextProvider>\r\n    )\r\n}\r\n\r\nexport default MainView","import axios from 'axios';\r\nimport qs from 'qs'\r\naxios.defaults.withCredentials = true\r\n\r\nconst HTTP_METHOD = {\r\n    GET: 'GET',\r\n    POST: 'POST',\r\n    PUT: 'PUT',\r\n    DELETE: 'DELETE',\r\n}\r\n\r\nconst getConfig = (method, path, data) => {\r\n    let url = \"\"\r\n    if (process.env.REACT_APP_MODE == \"DEV\") {\r\n        url = `/api/v1${path}`;\r\n    } else {\r\n        url = `${process.env.REACT_APP_HOST}${path}`\r\n    }\r\n\r\n    let timeout = process.env.REACT_APP_API_TIMEOUT\r\n    let _method = new String(method);\r\n    if (_method && _method.toUpperCase() === 'POST' && url.indexOf('upload') === 0) {\r\n        timeout = 120000\r\n    }\r\n\r\n    let config = {\r\n        timeout: timeout,\r\n        method: _method.toUpperCase(),\r\n        url,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type',\r\n            'Accept': 'application/json',\r\n            'Accept-Language': 'ko_KR',\r\n            'Transaction-Key': Date.now()\r\n        }\r\n    }\r\n\r\n    if (data) {\r\n        if (config.method === HTTP_METHOD.GET) {\r\n            url = url + (url.indexOf('?') > 0 ? '&' : '?') + qs.stringify(data);\r\n            config.url = url;\r\n        } else {\r\n            config.data = data;\r\n        }\r\n    }\r\n    return config\r\n}\r\n\r\nconst request = async (method, path, data) => {\r\n\r\n    try {\r\n        const {result} = await axiosRequest(method, path, data);\r\n        return {result};\r\n    } catch (error) {\r\n        if (error.statusCode == 401) {  //AccessToken 만료 시 refresh\r\n            return await refresh(methods, path, data);\r\n        } else {\r\n            return error;\r\n        }\r\n    }\r\n}\r\n\r\nconst refresh = async (methods, path, data) => {\r\n    const {result, error} = await refresh_N_reReq(method, path, data); //재발급 및 재요청\r\n    if (error) {\r\n        window.location.href = '/accounts/login';\r\n    } else {\r\n        return {result};\r\n    }\r\n}\r\n\r\nconst refresh_N_reReq = (method, path, data) => {\r\n    const {error} = axiosRequest('get', '/auth/refresh', undefined);\r\n    if (error) {    //RefreshToken도 만료 됨\r\n        return {result: null, error};\r\n    } else {        //AccessToken 재발급 후 재 request 요청\r\n        return axiosRequest(method, path, data);\r\n    }\r\n}\r\n\r\nconst axiosRequest = (method, path, data) => {\r\n    const config = getConfig(method, path, data);\r\n    const promise = axios(config);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        promise\r\n            .then((response) => {\r\n                console.log(response);\r\n                resolve({result: response.data});\r\n            })\r\n            .catch((error) => {\r\n                reject({error: error.response.data});\r\n            })\r\n    })\r\n}\r\n\r\nexport default request;","import { axios } from 'libs/index';\r\nimport { useGlobalContext } from 'contexts/GlobalContext'\r\n\r\nclass LoginService {\r\n    login(params: any) {\r\n        return axios('POST', '/auth/login', params);\r\n    }\r\n    logout(params: any) {\r\n        return axios('POST', '/auth/logout', params);\r\n    }\r\n    guestLogin(params: any) {\r\n        return axios('POST', '/auth/login/guest', params);\r\n    }\r\n    guestLogout(params: any) {\r\n        return axios('POST', '/auth/logout/guest', params);\r\n    }\r\n}\r\n\r\nexport default new LoginService();\r\n"],"sourceRoot":""}