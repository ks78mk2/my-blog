{"version":3,"sources":["contexts/GlobalContext.jsx","routers/AccountsRouter.jsx","routers/ContentsRouter.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["GlobalContext","React","createContext","useGlobalContext","useContext","GlobalContextProvider","_ref","children","_useState","useState","id","name","auth_level","_useState2","_slicedToArray","userInfo","setUserInfo","useEffect","localStorage","getItem","JSON","parse","value","_jsx","Provider","withRouter","props","LoginView","lazy","_Fragment","Suspense","fallback","_jsxs","Switch","Route","path","component","exact","Redirect","to","MainView","RoutercontentView","Router","AccountsRouter","ContentsRouter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sLAGMA,EAAgBC,IAAMC,cAAc,IAqB7BC,EAAmB,WAAH,OAASF,IAAMG,WAAWJ,IACxCK,IApBe,SAAHC,GAAoB,IAAfC,EAAQD,EAARC,SAAQC,EACJC,mBAAS,CAACC,GAAI,KAAMC,KAAM,KAAMC,WAAY,OAAMC,EAAAC,YAAAN,EAAA,GAA3EO,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAE5BI,qBAAU,WACFC,aAAaC,QAAQ,aACrBH,EAAYI,KAAKC,MAAMH,aAAaC,QAAQ,gBAE/C,IAEL,IAAMG,EAAQ,CACVP,WAAUC,eAEd,OACIO,cAACvB,EAAcwB,SAAQ,CAACF,MAAOA,EAAMf,SAChCA,M,6HCDIkB,eAfO,SAACC,GACvB,IAAMC,EAAYC,gBAAK,kBAAM,8DAE3B,OACEL,cAAAM,WAAA,CAAAtB,SACIgB,cAACO,WAAQ,CAACC,SAAU,KAAKxB,SACvByB,eAACC,IAAM,CAAA1B,SAAA,CACHgB,cAACW,IAAK,CAACC,KAAK,kBAAkBC,UAAWT,IACzCJ,cAACW,IAAK,CAACG,OAAK,EAACF,KAAK,YAAYC,UAAW,WAAO,OAASb,cAACe,IAAQ,CAACC,GAAI,iCCQtEd,eAhBO,SAACC,GACvB,IAAMc,EAAWZ,gBAAK,kBAAM,uDAE1B,OACEL,cAAAM,WAAA,CAAAtB,SACIgB,cAACO,WAAQ,CAACC,SAAU,KAAKxB,SACvByB,eAACC,IAAM,CAAA1B,SAAA,CACHgB,cAACW,IAAK,CAACC,KAAK,kBAAkBC,UAAWI,IACzCjB,cAACW,IAAK,CAACC,KAAK,iBAAiBC,UAAW,WAAQ,OAASJ,eAAAH,WAAA,CAAAtB,SAAA,CAAE,IAACgB,cAAA,MAAAhB,SAAI,SAAS,UACzEgB,cAACW,IAAK,CAACG,OAAK,EAACF,KAAK,YAAYC,UAAW,WAAQ,OAASb,cAACe,IAAQ,CAACC,GAAI,iCCNlFE,EAAoB,WACtB,OACIlB,cAAAM,WAAA,CAAAtB,SACIgB,cAACmB,IAAM,CAAAnC,SACHgB,cAACO,WAAQ,CAACC,SAAU,KAAKxB,SACrByB,eAACC,IAAM,CAAA1B,SAAA,CACHgB,cAACW,IAAK,CAACG,OAAK,EAACF,KAAK,aAAaC,UAAWO,IAC1CpB,cAACW,IAAK,CAACG,OAAK,EAACF,KAAK,aAAaC,UAAWQ,IAC1CrB,cAACW,IAAK,CAACG,OAAK,EAACF,KAAK,IAAIC,UAAW,WAC7B,OACIb,cAACe,IAAQ,CAACC,GAAG,iBAGrBhB,cAACW,IAAK,CAACC,KAAK,SAASC,UAAW,WAAQ,OAASJ,eAAAH,WAAA,CAAAtB,SAAA,CAAE,IAACgB,cAAA,MAAAhB,SAAI,iBAAiB,UACzEgB,cAACW,IAAK,CAACC,KAAK,IAAIC,UAAW,WAAQ,OAASJ,eAAAH,WAAA,CAAAtB,SAAA,CAAE,IAACgB,cAAA,MAAAhB,SAAI,kBAAkB,oBAgB9EsC,MARf,WACI,OACItB,cAAClB,IAAqB,CAAAE,SAClBgB,cAACkB,EAAiB,OCnBfK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAA3C,GAAkD,IAA/C4C,EAAM5C,EAAN4C,OAAQC,EAAM7C,EAAN6C,OAAQC,EAAM9C,EAAN8C,OAAQC,EAAM/C,EAAN+C,OAAQC,EAAOhD,EAAPgD,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEHjC,cAACsB,EAAG,IAERY,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9574764.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport _ from 'lodash';\r\n\r\nconst GlobalContext = React.createContext({})\r\n\r\nconst GlobalContextProvider = ({children}) => {\r\n    const [userInfo, setUserInfo] = useState({id: null, name: null, auth_level: null});\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('userInfo')) {\r\n            setUserInfo(JSON.parse(localStorage.getItem('userInfo')));\r\n        }\r\n      }, []);   \r\n\r\n    const value = {\r\n        userInfo, setUserInfo,\r\n    }\r\n    return (\r\n        <GlobalContext.Provider value={value}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => React.useContext(GlobalContext)\r\nexport default GlobalContextProvider","import { lazy, Suspense } from 'react'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\n\r\nconst AccountsRouter =  (props) => {\r\n  const LoginView = lazy(() => import('views/Account/Login'));\r\n  \r\n    return (\r\n      <>\r\n          <Suspense fallback={null}>\r\n            <Switch>\r\n                <Route path=\"/accounts/login\" component={LoginView}/>\r\n                <Route exact path=\"/accounts\" component={()=> { return ( <Redirect to =\"/accounts/login\" />) }} />\r\n            </Switch>\r\n          </Suspense>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default withRouter(AccountsRouter)\r\n  ","import { lazy, Suspense } from 'react'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\n\r\nconst ContentsRouter =  (props) => {\r\n  const MainView = lazy(() => import('views/Main'));\r\n\r\n    return (\r\n      <>\r\n          <Suspense fallback={null}>\r\n            <Switch>\r\n                <Route path=\"/contents/intro\" component={MainView}/>\r\n                <Route path=\"/contents/post\" component={() => { return ( <> <h1>post</h1> </>)}} />\r\n                <Route exact path=\"/contents\" component={() => { return ( <Redirect to =\"/contents/intro\" />) }} />\r\n            </Switch>\r\n          </Suspense>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default withRouter(ContentsRouter)\r\n  ","import { lazy, Suspense , useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport GlobalContextProvider, { useGlobalContext } from 'contexts/GlobalContext';\r\nimport AccountsRouter from 'routers/AccountsRouter';\r\nimport ContentsRouter from 'routers/ContentsRouter';\r\n\r\nconst RoutercontentView = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Suspense fallback={null}>\r\n                    <Switch>\r\n                        <Route exact path=\"/accounts*\" component={AccountsRouter}/>\r\n                        <Route exact path=\"/contents*\" component={ContentsRouter}/>\r\n                        <Route exact path=\"/\" component={() => {\r\n                            return (\r\n                                <Redirect to=\"/accounts\" />\r\n                            )\r\n                        }}/>\r\n                        <Route path=\"/error\" component={() => { return ( <> <h1>server Error</h1> </>)}}/>\r\n                        <Route path=\"*\" component={() => { return ( <> <h1>404 not found</h1> </>)}}/>\r\n                    </Switch>\r\n                </Suspense>\r\n            </Router>  \r\n        </>\r\n    )\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <GlobalContextProvider>\r\n            <RoutercontentView/>\r\n        </GlobalContextProvider>    \r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n      <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}